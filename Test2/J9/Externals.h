// $Id: Externals.h 7712 2011-01-20 09:37:47Z hyojin.lee $

#ifndef __J9_EXTERNALS_H__
#define __J9_EXTERNALS_H__

#if !defined(_JUST9_MFC)
	#if DETECT_MEMORY_LEAK
		#define _CRTDBG_MAP_ALLOC
		#include <crtdbg.h>
	#endif
#endif

////////////////////////////////////////////////////////////////////////////////
// stl
#pragma warning(push)
#pragma warning(disable:4702)// unreachable code

#include <vector>
#include <deque>
#include <list>
#include <string>
#include <set>
#include <hash_set>
#include <map>
#include <hash_map>
#include <algorithm>
#include <stack>
#include <bitset>
#include <limits>
#pragma warning(pop)
// stl
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// core standard librarys
#include <tchar.h>
#include <stdio.h>
#include <io.h>
// core standard librarys
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// win32
#if defined(_WIN32)
	#if !defined(_JUST9_MFC)
		#define WIN32_LEAN_AND_MEAN		// Exclude rarely-used stuff from Windows headers
		#include <windows.h>
	#else
		#include <afx.h>
	#endif
#endif
// win32
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// pthread
#ifdef _SERVER
	#define _J9_USE_PTHREAD
#endif
#ifdef _J9_USE_PTHREAD
	//#define PTW32_STATIC_LIB
	#ifdef PTW32_STATIC_LIB
		#include "../../../externals/pthreads/slink/pthread.h"
	#else
		#include <pthread.h>
		#pragma comment(lib, "pthreadVC2.lib")
	#endif
#endif//_J9_USE_PTHREAD
// pthread
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// zlib
#define ZLIB_STATIC_LIB

#ifdef ZLIB_STATIC_LIB
	#include "../../../externals/zlib/slink/zlib.h"
#else
	#include <zlib.h>
	#pragma comment(lib, "zdll.lib")
#endif
// zlib
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// directx
#ifdef J9_SOL_USE_DIRECTX
	#include <d3dx9math.h>
#else//J9_SOL_USE_DIRECTX
	#include <math.h>
#endif//J9_SOL_USE_DIRECTX
// directx
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// sse
#include <xmmintrin.h>
// sse
////////////////////////////////////////////////////////////////////////////////

#endif//__J9_EXTERNALS_H__